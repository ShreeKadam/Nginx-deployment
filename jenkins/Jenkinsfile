pipeline {
  agent any

  environment {
    AWS_REGION = 'us-east-1'
    ANSIBLE_HOST_KEY_CHECKING = 'False'   // Disable SSH host key checking
    ANSIBLE_CONFIG = 'ansible/ansible.cfg'  // Ensure ansible uses your config
  }

  stages {
    stage('Checkout') {
      steps {
        git url: 'https://github.com/ShreeKadam/tool-evaluation.git', branch: 'main'
      }
    }

    stage('Terraform Init & Apply') {
      steps {
        withCredentials([[
          $class: 'AmazonWebServicesCredentialsBinding',
          credentialsId: 'aws-creds'  // Your Jenkins AWS credentials ID here
        ]]) {
          dir('terraform') {
            sh 'terraform init'
            sh 'terraform apply -auto-approve'
          }
        }
      }
    }

    stage('Write PEM Key') {
      steps {
        script {
          def key = sh(script: "terraform -chdir=terraform output -raw private_key", returnStdout: true).trim()
          writeFile file: 'terraform/private_key.pem', text: key
          sh 'chmod 600 terraform/private_key.pem'
        }
      }
    }

    stage('Setup Python Virtual Env and Install Boto') {
      steps {
        sh '''
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install boto boto3 botocore ansible boto3 boto
        '''
      }
    }

    stage('Ansible - Install NGINX on Private EC2') {
      steps {
        dir('ansible') {
          withCredentials([[
            $class: 'AmazonWebServicesCredentialsBinding',
            credentialsId: 'aws-creds' 
          ]]) {
            sh '''
              . ../venv/bin/activate
              ansible-playbook -i inventory_aws_ec2.yml nginx.yml --private-key ../terraform/private_key.pem
            '''
          }
        }
      }
    }
  }

  post {
    always {
      echo "Pipeline complete."
    }
  }
}

