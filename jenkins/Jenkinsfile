pipeline {
  agent any

  environment {
    AWS_REGION = 'us-east-1'
  }

  stages {
    stage('Checkout') {
      steps {
        git url: 'https://github.com/ShreeKadam/tool-evaluation.git', branch: 'main'
      }
    }

    stage('Terraform Init & Apply') {
      steps {
        withCredentials([[
          $class: 'AmazonWebServicesCredentialsBinding',
          credentialsId: 'aws-creds'  // Replace with your Jenkins AWS credentials ID
        ]]) {
          dir('terraform') {
            sh 'terraform init'
            sh 'terraform apply -auto-approve'
          }
        }
      }
    }

    stage('Write PEM Key') {
      steps {
        script {
          def key = sh(script: "terraform -chdir=terraform output -raw private_key", returnStdout: true).trim()
          writeFile file: 'terraform/private_key.pem', text: key
          sh 'chmod 600 terraform/private_key.pem'
        }
      }
    }

    stage('Install Python venv and AWS dependencies') {
      steps {
        sh '''
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install boto boto3 botocore ansible
        '''
      }
    }

    stage('Ansible - Install NGINX on Private EC2') {
      steps {
        dir('ansible') {
          withCredentials([[
            $class: 'AmazonWebServicesCredentialsBinding',
            credentialsId: 'aws-creds'  // AWS credentials binding
          ]]) {
            sh '''
              export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
              export AWS_REGION=us-east-1

              . ../venv/bin/activate

              # Validate inventory
              ansible-inventory -i inventory_aws_ec2.yml --list

              # Run playbook targeting private EC2 with private key
              ansible-playbook -i inventory_aws_ec2.yml nginx.yml --private-key ../terraform/private_key.pem
            '''
          }
        }
      }
    }
  }

  post {
    always {
      echo "Pipeline complete."
    }
  }
}

